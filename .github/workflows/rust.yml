name: Continuous Integration

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true
          components: clippy, rustfmt

      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ github.token }}

      - name: Check formatting
        run: cargo fmt  -- --check

      - name: Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features -- -D clippy::all -A clippy::single_component_path_imports

      - name: Build
        run: cargo build --all --release

      - name: Cache Binary
        uses: actions/upload-artifact@v3
        with:
          name: lw-generator
          path: target/release/lw-generator

      - name: Name Release
        if: startsWith(github.ref, 'refs/tags')
        id: vars
        run: echo "name=NAME::lw-generator-${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Prepare Release
        if: startsWith(github.ref, 'refs/tags/')
        env:
          NAME: ${{ steps.vars.outputs.NAME }}
        run: |
          tar -zcv -C target/release -f $NAME.tar.gz lw-generator
          sha256sum -b --tag $NAME.tar.gz > $NAME.checksum

      - name: Push Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ${{ steps.vars.outputs.NAME }}.tar.gz
            ${{ steps.vars.outputs.NAME }}.checksum

  generate:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        region:
          - AS923-1B
          - AS923-1
          - AS923-2
          - AS923-3
          - AS923-4
          - AU915
          - CD900-1A
          - CN470
          - EU433
          - EU868
          - IN865
          - KR920
          - RU864
          - US915
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install Binary
        uses: actions/download-artifact@v3
        with:
          name: lw-generator

      - name: Fix Binary
        run: |
          chmod +x ./lw-generator

      - name: Build Index
        run: |
          ./lw-generator generate extern/hplans/${{ matrix.region }}.geojson ${{matrix.region }}.res7.h3idx

      - name: Release Index
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ${{ matrix.region }}.res7.h3idx
