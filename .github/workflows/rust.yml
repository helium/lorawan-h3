name: Continuous Integration

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    branches: [main]

jobs:
  hygiene:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Check formatting
        run: |
          cargo fmt  -- --check

      - name: Clippy
        run: |
          cargo clippy --all-features -- -D clippy::all -A clippy::single_component_path_imports

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable

      - name: Install protoc
        run: sudo apt-get install -y protobuf-compiler

      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Build
        run: |
          cargo build --all --release

      - name: Cache Binary
        uses: actions/upload-artifact@v3
        with:
          name: lw-generator
          path: target/release/lw-generator

  generate:
    runs-on: ubuntu-latest
    needs: [build, hygiene]
    strategy:
      matrix:
        region:
          - AS923-1
          - AS923-1B
          - AS923-1C
          - AS923-2
          - AS923-3
          - AS923-4
          - AU915
          - AU915-SB1
          - CD900-1A
          - CN470
          - EU433
          - EU868
          - IN865
          - KR920
          - RU864
          - US915
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Binary
        uses: actions/download-artifact@v3
        with:
          name: lw-generator

      - name: Fix Binary
        run: |
          chmod +x ./lw-generator

      - name: Build Index
        run: |
          ./lw-generator generate extern/hplans/${{ matrix.region }}.geojson ${{matrix.region }}.res7.h3idz

      - name: Cache Index
        uses: actions/upload-artifact@v3
        with:
          if-no-files-found: error
          name: ${{ matrix.region }}.res7.h3idz
          path: ${{matrix.region }}.res7.h3idz

  release:
    runs-on: ubuntu-latest
    needs: [build, generate]
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3

      - name: Prepare Release
        run: |
          chmod +x ./lw-generator/lw-generator
          tar -zcv -C lw-generator -f lw-generator.tar.gz lw-generator
          sha256sum -b --tag lw-generator.tar.gz > lw-generator.checksum

      - name: Push Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          fail_on_unmatched_files: true
          files: |
            lw-generator.tar.gz
            lw-generator.checksum
            **/*.h3idz
